#% text_encoding = iso8859_1
_package sw
$

#Create Display trees for displaying tests
_pragma(classify_level=debug, topic={Munit})
def_slotted_exemplar(:munit_test_display_tree, {}, :munit_hierarchy_display_tree)
$

_pragma(classify_level=debug, topic={Munit})
_method munit_test_display_tree.display_text
	>> _self.key.write_string
_endmethod
$

_method munit_test_display_tree.status()
	>> _if .key _is _unset _orif _not .key.has_run? _then >> :not_run
	   _elif .key.errored? _then >> :error
	   _elif .key.failed? _then >> :failed
	   _else >> :success _endif
_endmethod
$


_method munit_hierarchy_display_tree.not_run_icon()
	_return { :test, _self.module_name }
_endmethod
$

_pragma(classify_level=debug, topic={MUnit})
_method munit_test_display_tree.tests()
	_return rope.new_with(.key)
_endmethod
$

_method munit_test_display_tree.modules()
	_return {}
_endmethod
$
